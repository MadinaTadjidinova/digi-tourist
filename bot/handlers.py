from telebot import types
from bot.slider import SLIDERS, send_slider, edit_slider, clear_photos, user_last_photo_ids
from collections import defaultdict

user_ai_mode = defaultdict(bool)
user_language = defaultdict(lambda: "ru")

def register_handlers(bot, user_language, user_ai_mode, user_history, client, qa_chain):
    @bot.message_handler(commands=["start"])
    def start(message):
        keyboard = types.InlineKeyboardMarkup()
        button11 = types.InlineKeyboardButton(text="–†—É—Å—Å–∫–∏–π", callback_data="button11")
        button22 = types.InlineKeyboardButton(text="English", callback_data="button22")
        keyboard.add(button11)
        keyboard.add(button22)

        bot.send_message(
            message.chat.id,
            text=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}!\n–Ø - <b>{bot.get_me().first_name}</b>, –±–æ—Ç - –ü—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—å. –í—ã–±–µ—Ä–∏, —Ç–æ —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç",
            parse_mode='html',
            reply_markup=keyboard
        )

    @bot.message_handler(commands=["lang"])
    def lang_command(message):
        keyboard = types.InlineKeyboardMarkup()
        button11 = types.InlineKeyboardButton(text="–†—É—Å—Å–∫–∏–π", callback_data="button11")
        button22 = types.InlineKeyboardButton(text="English", callback_data="button22")
        keyboard.add(button11, button22)
        bot.send_message(
            message.chat.id,
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Please select your language:",
            reply_markup=keyboard
        )

    @bot.message_handler(commands=["ask_ai"])
    def ask_ai_command(message):
        user_ai_mode[message.chat.id] = True
        bot.send_message(message.chat.id, "ü§ñ –ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å. ")

    @bot.message_handler(commands=["menu"])
    def menu_command(message):
        lang = user_language[message.chat.id]
        keyboard = types.InlineKeyboardMarkup()

        if lang == "ru":
            keyboard.add(types.InlineKeyboardButton(text="–¢—É—Ä—ã", callback_data="button1"))
            keyboard.add(types.InlineKeyboardButton(text="–î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏", callback_data="button2"))
            keyboard.add(types.InlineKeyboardButton(text="–û—Ç–µ–ª–∏", callback_data="button3"))
            keyboard.add(types.InlineKeyboardButton(text="–ö–∞—Ñ–µ", callback_data="button4"))
            keyboard.add(types.InlineKeyboardButton(text="\ud83d\udcde –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="button5"))
            keyboard.add(types.InlineKeyboardButton(text="\ud83e\udd16 –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ò–ò", callback_data="ask_ai"))
        else:
            keyboard.add(types.InlineKeyboardButton(text="Tours", callback_data="button1en"))
            keyboard.add(types.InlineKeyboardButton(text="Attractives", callback_data="button2en"))
            keyboard.add(types.InlineKeyboardButton(text="Hotels", callback_data="button3en"))
            keyboard.add(types.InlineKeyboardButton(text="Cafe", callback_data="button4en"))
            keyboard.add(types.InlineKeyboardButton(text="Useful Contacts", callback_data="button5en"))
            keyboard.add(types.InlineKeyboardButton(text="\ud83e\udd16 Ask AI", callback_data="ask_ai"))

        bot.send_message(message.chat.id, "–ú–µ–Ω—é" if lang == "ru" else "Menu", reply_markup=keyboard)

    @bot.callback_query_handler(func=lambda call: True)
    def callback_inline(call):
        lang = user_language[call.message.chat.id]

        if call.data == "button11":
            user_language[call.message.chat.id] = "ru"
            menu_command(call.message)
        elif call.data == "button22":
            user_language[call.message.chat.id] = "en"
            menu_command(call.message)
        elif call.data == "mainmenu":
            clear_photos(bot, call)
            menu_command(call.message)
        elif call.data == "mainmenuenglish":
            clear_photos(bot, call)
            menu_command(call.message)
        elif call.data == "ask_ai":
            user_ai_mode[call.message.chat.id] = True
            bot.send_message(call.message.chat.id, "–í—ã –≤–æ—à–ª–∏ –≤ —Ä–µ–∂–∏–º –ò–ò. –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å.")

        elif call.data in SLIDERS:
            send_slider(bot, call, call.data, lang)

        elif "_" in call.data:
            category, index = call.data.split("_")
            if category in SLIDERS:
                edit_slider(bot, call, category, int(index), lang)

        elif call.data in ["button1", "button1en"]:
            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(
                types.InlineKeyboardButton("–ê–≤—Ç–æ—Ç—É—Ä" if lang == "ru" else "Auto Tour", callback_data="tour"),
                types.InlineKeyboardButton("–ü–µ—à–∏–π —Ç—É—Ä" if lang == "ru" else "Hiking Tour", callback_data="tour")
            )
            back_text = "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é ‚è™" if lang == "ru" else "‚¨ÖÔ∏è Back to menu"
            back_callback = "mainmenu" if lang == "ru" else "mainmenuenglish"
            keyboard.add(types.InlineKeyboardButton(back_text, callback_data=back_callback))
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ç—É—Ä–∞ üëá" if lang == "ru" else "Choose a tour üëá", reply_markup=keyboard)

        elif call.data in ["button2", "button2en"]:
            keyboard = types.InlineKeyboardMarkup()
            text = "–ú–µ—á–µ—Ç–∏ / –¶–µ—Ä–∫–≤–∏" if lang == "ru" else "Mosques / Churches"
            keyboard.add(types.InlineKeyboardButton(text, callback_data="sight"))
            back_text = "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é ‚è™" if lang == "ru" else "‚¨ÖÔ∏è Back to menu"
            back_callback = "mainmenu" if lang == "ru" else "mainmenuenglish"
            keyboard.add(types.InlineKeyboardButton(back_text, callback_data=back_callback))
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å üëá" if lang == "ru" else "Choose an attraction üëá",
                                  reply_markup=keyboard)

        elif call.data in ["button3", "button3en"]:
            keyboard = types.InlineKeyboardMarkup()
            labels = ["–û—Ç–µ–ª–∏", "–ì–æ—Å—Ç–µ–≤—ã–µ –¥–æ–º–∞", "–•–æ—Å—Ç–µ–ª—ã"] if lang == "ru" else ["Hotels", "Guesthouses", "Hostels"]
            ids = ["hotel", "guest", "hostel"]
            for label, cid in zip(labels, ids):
                keyboard.add(types.InlineKeyboardButton(label, callback_data=cid))
            back_text = "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é ‚è™" if lang == "ru" else "‚¨ÖÔ∏è Back to menu"
            back_callback = "mainmenu" if lang == "ru" else "mainmenuenglish"
            keyboard.add(types.InlineKeyboardButton(back_text, callback_data=back_callback))
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è üëá" if lang == "ru" else "Choose where to stay üëá",
                                  reply_markup=keyboard)

        elif call.data in ["button4", "button4en"]:
            keyboard = types.InlineKeyboardMarkup()
            labels = ["–ö–∞—Ñ–µ", "–ö–æ—Ñ–µ–π–Ω–∏", "–ê—à–ª—è–Ω-—Ñ—É"] if lang == "ru" else ["Cafe", "Coffee shops", "Ashlyan-fu"]
            ids = ["cafe", "coffee", "ashlyan"]
            for label, cid in zip(labels, ids):
                keyboard.add(types.InlineKeyboardButton(label, callback_data=cid))
            back_text = "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é ‚è™" if lang == "ru" else "‚¨ÖÔ∏è Back to menu"
            back_callback = "mainmenu" if lang == "ru" else "mainmenuenglish"
            keyboard.add(types.InlineKeyboardButton(back_text, callback_data=back_callback))
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ üëá" if lang == "ru" else "Choose a place üëá",
                                  reply_markup=keyboard)

        elif call.data in ["button5", "button5en"]:
            contact_text = (
                "<b>\ud83d\udcde –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã</b>\n\n"
                "\ud83d\ude93 <b>–ü–æ–ª–∏—Ü–∏—è:</b> 102\n"
                "\ud83d\ude91 <b>–°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å:</b> 103\n"
                "\ud83d\ude92 <b>–ü–æ–∂–∞—Ä–Ω–∞—è —Å–ª—É–∂–±–∞:</b> 101\n"
                "\ud83c\udfe5 <b>–ì–æ—Ä–æ–¥—Å–∫–∞—è –±–æ–ª—å–Ω–∏—Ü–∞ –ö–∞—Ä–∞–∫–æ–ª–∞:</b> +996 312 00 00 00\n"
                "\u2139\ufe0f <b>–¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Ñ–æ—Ü–µ–Ω—Ç—Ä:</b> +996 700 123 456\n"
                "\ud83d\ude96 <b>–¢–∞–∫—Å–∏:</b> +996 777 123 456"
            ) if lang == "ru" else (
                "<b>\ud83d\udcde Useful Contacts</b>\n\n"
                "\ud83d\ude93 <b>Police:</b> 102\n"
                "\ud83d\ude91 <b>Ambulance:</b> 103\n"
                "\ud83d\ude92 <b>Fire Service:</b> 101\n"
                "\ud83c\udfe5 <b>Karakol City Hospital:</b> +996 312 00 00 00\n"
                "\u2139\ufe0f <b>Tourist Info Center:</b> +996 700 123 456\n"
                "\ud83d\ude96 <b>Taxi Service:</b> +996 777 123 456"
            )
            back_callback = "mainmenu" if lang == "ru" else "mainmenuenglish"
            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton("‚è™ –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é" if lang == "ru" else "‚¨ÖÔ∏è Back to menu", callback_data=back_callback))
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text=contact_text,
                parse_mode="HTML",
                reply_markup=keyboard
            )
